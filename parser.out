Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    AS
    ASSIGN
    AUTO_INCREMENT
    Add
    Alter
    CADENA2
    COLON
    COMENTARIOS
    COMILLASDOBLES
    COMILLASIMPLE
    CREATE
    Cascade
    Constraint
    DIVIDE
    Database
    Foreign
    HASHTAG
    ID
    INT
    KEY
    LBLOCK
    LBRACKET
    MINUSEQUAL
    MINUSMINUS
    MOD
    NOT
    On
    PLUSEQUAL
    PLUSPLUS
    PRIMARY
    PUNTO
    QUESTIONMARK
    RBLOCK
    RBRACKET
    RESTA
    References
    SUMA
    TABLE
    USE
    VARCHAR

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> sele fro wher PUNTOYCOMA
Rule 5     declaration -> upd se wher PUNTOYCOMA
Rule 6     declaration -> inser value PUNTOYCOMA
Rule 7     declaration -> del wher PUNTOYCOMA
Rule 8     declaration -> sele fro PUNTOYCOMA
Rule 9     sele -> SELECT variab
Rule 10    sele -> SELECT TIMES
Rule 11    wher -> WHERE vcom
Rule 12    del -> DELETE FROM VARIABLE
Rule 13    fro -> FROM VARIABLE
Rule 14    upd -> UPDATE variab
Rule 15    se -> SET vawva
Rule 16    inser -> INSERT INTO variab
Rule 17    value -> VALUES PARE_IZ val PARE_DE
Rule 18    variab -> variab COMA VARIABLE
Rule 19    variab -> VARIABLE
Rule 20    variab -> COMA VARIABLE
Rule 21    vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL NUMERO
Rule 22    vawva -> VARIABLE SIMBOLO_IGUAL NUMERO
Rule 23    vawva -> COMA VARIABLE SIMBOLO_IGUAL NUMERO
Rule 24    vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL CADENA
Rule 25    vawva -> VARIABLE SIMBOLO_IGUAL CADENA
Rule 26    vawva -> COMA VARIABLE SIMBOLO_IGUAL CADENA
Rule 27    val -> val COMA CADENA
Rule 28    val -> CADENA
Rule 29    val -> COMA CADENA
Rule 30    val -> val COMA NUMERO
Rule 31    val -> NUMERO
Rule 32    val -> COMA NUMERO
Rule 33    vcom -> vcom andor variab relop NUMERO
Rule 34    vcom -> variab relop NUMERO
Rule 35    vcom -> andor variab relop NUMERO
Rule 36    vcom -> vcom andor variab relop CADENA
Rule 37    vcom -> variab relop CADENA
Rule 38    vcom -> andor variab relop CADENA
Rule 39    relop -> MENOR
Rule 40    relop -> MENOR_O_IGUAL
Rule 41    relop -> MAYOR
Rule 42    relop -> MAYOR_O_IGUAL
Rule 43    relop -> DIFERENTE
Rule 44    relop -> DISTINTO
Rule 45    relop -> ISEQUAL
Rule 46    relop -> SIMBOLO_IGUAL
Rule 47    andor -> AND
Rule 48    andor -> OR
Rule 49    empty -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 
AND                  : 47
AS                   : 
ASSIGN               : 
AUTO_INCREMENT       : 
Add                  : 
Alter                : 
CADENA               : 24 25 26 27 28 29 36 37 38
CADENA2              : 
COLON                : 
COMA                 : 18 20 21 23 24 26 27 29 30 32
COMENTARIOS          : 
COMILLASDOBLES       : 
COMILLASIMPLE        : 
CREATE               : 
Cascade              : 
Constraint           : 
DELETE               : 12
DIFERENTE            : 43
DISTINTO             : 44
DIVIDE               : 
Database             : 
FROM                 : 12 13
Foreign              : 
HASHTAG              : 
ID                   : 
INSERT               : 16
INT                  : 
INTO                 : 16
ISEQUAL              : 45
KEY                  : 
LBLOCK               : 
LBRACKET             : 
MAYOR                : 41
MAYOR_O_IGUAL        : 42
MENOR                : 39
MENOR_O_IGUAL        : 40
MINUSEQUAL           : 
MINUSMINUS           : 
MOD                  : 
NOT                  : 
NUMERO               : 21 22 23 30 31 32 33 34 35
OR                   : 48
On                   : 
PARE_DE              : 17
PARE_IZ              : 17
PLUSEQUAL            : 
PLUSPLUS             : 
PRIMARY              : 
PUNTO                : 
PUNTOYCOMA           : 4 5 6 7 8
QUESTIONMARK         : 
RBLOCK               : 
RBRACKET             : 
RESTA                : 
References           : 
SELECT               : 9 10
SET                  : 15
SIMBOLO_IGUAL        : 21 22 23 24 25 26 46
SUMA                 : 
TABLE                : 
TIMES                : 10
UPDATE               : 14
USE                  : 
VALUES               : 17
VARCHAR              : 
VARIABLE             : 12 13 18 19 20 21 22 23 24 25 26
WHERE                : 11
error                : 

Nonterminals, with rules where they appear

andor                : 33 35 36 38
declaration          : 2 3
declaration_list     : 1 2
del                  : 7
empty                : 
fro                  : 4 8
inser                : 6
program              : 0
relop                : 33 34 35 36 37 38
se                   : 5
sele                 : 4 8
upd                  : 5
val                  : 17 27 30
value                : 6
variab               : 9 14 16 18 33 34 35 36 37 38
vawva                : 15 21 24
vcom                 : 11 33 36
wher                 : 4 5 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . sele fro wher PUNTOYCOMA
    (5) declaration -> . upd se wher PUNTOYCOMA
    (6) declaration -> . inser value PUNTOYCOMA
    (7) declaration -> . del wher PUNTOYCOMA
    (8) declaration -> . sele fro PUNTOYCOMA
    (9) sele -> . SELECT variab
    (10) sele -> . SELECT TIMES
    (14) upd -> . UPDATE variab
    (16) inser -> . INSERT INTO variab
    (12) del -> . DELETE FROM VARIABLE

    SELECT          shift and go to state 8
    UPDATE          shift and go to state 9
    INSERT          shift and go to state 10
    DELETE          shift and go to state 11

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    sele                           shift and go to state 4
    upd                            shift and go to state 5
    inser                          shift and go to state 6
    del                            shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . sele fro wher PUNTOYCOMA
    (5) declaration -> . upd se wher PUNTOYCOMA
    (6) declaration -> . inser value PUNTOYCOMA
    (7) declaration -> . del wher PUNTOYCOMA
    (8) declaration -> . sele fro PUNTOYCOMA
    (9) sele -> . SELECT variab
    (10) sele -> . SELECT TIMES
    (14) upd -> . UPDATE variab
    (16) inser -> . INSERT INTO variab
    (12) del -> . DELETE FROM VARIABLE

    $end            reduce using rule 1 (program -> declaration_list .)
    SELECT          shift and go to state 8
    UPDATE          shift and go to state 9
    INSERT          shift and go to state 10
    DELETE          shift and go to state 11

    declaration                    shift and go to state 12
    sele                           shift and go to state 4
    upd                            shift and go to state 5
    inser                          shift and go to state 6
    del                            shift and go to state 7

state 3

    (3) declaration_list -> declaration .

    SELECT          reduce using rule 3 (declaration_list -> declaration .)
    UPDATE          reduce using rule 3 (declaration_list -> declaration .)
    INSERT          reduce using rule 3 (declaration_list -> declaration .)
    DELETE          reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> sele . fro wher PUNTOYCOMA
    (8) declaration -> sele . fro PUNTOYCOMA
    (13) fro -> . FROM VARIABLE

    FROM            shift and go to state 14

    fro                            shift and go to state 13

state 5

    (5) declaration -> upd . se wher PUNTOYCOMA
    (15) se -> . SET vawva

    SET             shift and go to state 16

    se                             shift and go to state 15

state 6

    (6) declaration -> inser . value PUNTOYCOMA
    (17) value -> . VALUES PARE_IZ val PARE_DE

    VALUES          shift and go to state 18

    value                          shift and go to state 17

state 7

    (7) declaration -> del . wher PUNTOYCOMA
    (11) wher -> . WHERE vcom

    WHERE           shift and go to state 20

    wher                           shift and go to state 19

state 8

    (9) sele -> SELECT . variab
    (10) sele -> SELECT . TIMES
    (18) variab -> . variab COMA VARIABLE
    (19) variab -> . VARIABLE
    (20) variab -> . COMA VARIABLE

    TIMES           shift and go to state 22
    VARIABLE        shift and go to state 24
    COMA            shift and go to state 23

    variab                         shift and go to state 21

state 9

    (14) upd -> UPDATE . variab
    (18) variab -> . variab COMA VARIABLE
    (19) variab -> . VARIABLE
    (20) variab -> . COMA VARIABLE

    VARIABLE        shift and go to state 24
    COMA            shift and go to state 23

    variab                         shift and go to state 25

state 10

    (16) inser -> INSERT . INTO variab

    INTO            shift and go to state 26


state 11

    (12) del -> DELETE . FROM VARIABLE

    FROM            shift and go to state 27


state 12

    (2) declaration_list -> declaration_list declaration .

    SELECT          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    UPDATE          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INSERT          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DELETE          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 13

    (4) declaration -> sele fro . wher PUNTOYCOMA
    (8) declaration -> sele fro . PUNTOYCOMA
    (11) wher -> . WHERE vcom

    PUNTOYCOMA      shift and go to state 29
    WHERE           shift and go to state 20

    wher                           shift and go to state 28

state 14

    (13) fro -> FROM . VARIABLE

    VARIABLE        shift and go to state 30


state 15

    (5) declaration -> upd se . wher PUNTOYCOMA
    (11) wher -> . WHERE vcom

    WHERE           shift and go to state 20

    wher                           shift and go to state 31

state 16

    (15) se -> SET . vawva
    (21) vawva -> . vawva COMA VARIABLE SIMBOLO_IGUAL NUMERO
    (22) vawva -> . VARIABLE SIMBOLO_IGUAL NUMERO
    (23) vawva -> . COMA VARIABLE SIMBOLO_IGUAL NUMERO
    (24) vawva -> . vawva COMA VARIABLE SIMBOLO_IGUAL CADENA
    (25) vawva -> . VARIABLE SIMBOLO_IGUAL CADENA
    (26) vawva -> . COMA VARIABLE SIMBOLO_IGUAL CADENA

    VARIABLE        shift and go to state 34
    COMA            shift and go to state 33

    vawva                          shift and go to state 32

state 17

    (6) declaration -> inser value . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 35


state 18

    (17) value -> VALUES . PARE_IZ val PARE_DE

    PARE_IZ         shift and go to state 36


state 19

    (7) declaration -> del wher . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 37


state 20

    (11) wher -> WHERE . vcom
    (33) vcom -> . vcom andor variab relop NUMERO
    (34) vcom -> . variab relop NUMERO
    (35) vcom -> . andor variab relop NUMERO
    (36) vcom -> . vcom andor variab relop CADENA
    (37) vcom -> . variab relop CADENA
    (38) vcom -> . andor variab relop CADENA
    (18) variab -> . variab COMA VARIABLE
    (19) variab -> . VARIABLE
    (20) variab -> . COMA VARIABLE
    (47) andor -> . AND
    (48) andor -> . OR

    VARIABLE        shift and go to state 24
    COMA            shift and go to state 23
    AND             shift and go to state 41
    OR              shift and go to state 42

    vcom                           shift and go to state 38
    andor                          shift and go to state 39
    variab                         shift and go to state 40

state 21

    (9) sele -> SELECT variab .
    (18) variab -> variab . COMA VARIABLE

    FROM            reduce using rule 9 (sele -> SELECT variab .)
    COMA            shift and go to state 43


state 22

    (10) sele -> SELECT TIMES .

    FROM            reduce using rule 10 (sele -> SELECT TIMES .)


state 23

    (20) variab -> COMA . VARIABLE

    VARIABLE        shift and go to state 44


state 24

    (19) variab -> VARIABLE .

    COMA            reduce using rule 19 (variab -> VARIABLE .)
    FROM            reduce using rule 19 (variab -> VARIABLE .)
    SET             reduce using rule 19 (variab -> VARIABLE .)
    MENOR           reduce using rule 19 (variab -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 19 (variab -> VARIABLE .)
    MAYOR           reduce using rule 19 (variab -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 19 (variab -> VARIABLE .)
    DIFERENTE       reduce using rule 19 (variab -> VARIABLE .)
    DISTINTO        reduce using rule 19 (variab -> VARIABLE .)
    ISEQUAL         reduce using rule 19 (variab -> VARIABLE .)
    SIMBOLO_IGUAL   reduce using rule 19 (variab -> VARIABLE .)
    VALUES          reduce using rule 19 (variab -> VARIABLE .)


state 25

    (14) upd -> UPDATE variab .
    (18) variab -> variab . COMA VARIABLE

    SET             reduce using rule 14 (upd -> UPDATE variab .)
    COMA            shift and go to state 43


state 26

    (16) inser -> INSERT INTO . variab
    (18) variab -> . variab COMA VARIABLE
    (19) variab -> . VARIABLE
    (20) variab -> . COMA VARIABLE

    VARIABLE        shift and go to state 24
    COMA            shift and go to state 23

    variab                         shift and go to state 45

state 27

    (12) del -> DELETE FROM . VARIABLE

    VARIABLE        shift and go to state 46


state 28

    (4) declaration -> sele fro wher . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 47


state 29

    (8) declaration -> sele fro PUNTOYCOMA .

    SELECT          reduce using rule 8 (declaration -> sele fro PUNTOYCOMA .)
    UPDATE          reduce using rule 8 (declaration -> sele fro PUNTOYCOMA .)
    INSERT          reduce using rule 8 (declaration -> sele fro PUNTOYCOMA .)
    DELETE          reduce using rule 8 (declaration -> sele fro PUNTOYCOMA .)
    $end            reduce using rule 8 (declaration -> sele fro PUNTOYCOMA .)


state 30

    (13) fro -> FROM VARIABLE .

    PUNTOYCOMA      reduce using rule 13 (fro -> FROM VARIABLE .)
    WHERE           reduce using rule 13 (fro -> FROM VARIABLE .)


state 31

    (5) declaration -> upd se wher . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 48


state 32

    (15) se -> SET vawva .
    (21) vawva -> vawva . COMA VARIABLE SIMBOLO_IGUAL NUMERO
    (24) vawva -> vawva . COMA VARIABLE SIMBOLO_IGUAL CADENA

    WHERE           reduce using rule 15 (se -> SET vawva .)
    COMA            shift and go to state 49


state 33

    (23) vawva -> COMA . VARIABLE SIMBOLO_IGUAL NUMERO
    (26) vawva -> COMA . VARIABLE SIMBOLO_IGUAL CADENA

    VARIABLE        shift and go to state 50


state 34

    (22) vawva -> VARIABLE . SIMBOLO_IGUAL NUMERO
    (25) vawva -> VARIABLE . SIMBOLO_IGUAL CADENA

    SIMBOLO_IGUAL   shift and go to state 51


state 35

    (6) declaration -> inser value PUNTOYCOMA .

    SELECT          reduce using rule 6 (declaration -> inser value PUNTOYCOMA .)
    UPDATE          reduce using rule 6 (declaration -> inser value PUNTOYCOMA .)
    INSERT          reduce using rule 6 (declaration -> inser value PUNTOYCOMA .)
    DELETE          reduce using rule 6 (declaration -> inser value PUNTOYCOMA .)
    $end            reduce using rule 6 (declaration -> inser value PUNTOYCOMA .)


state 36

    (17) value -> VALUES PARE_IZ . val PARE_DE
    (27) val -> . val COMA CADENA
    (28) val -> . CADENA
    (29) val -> . COMA CADENA
    (30) val -> . val COMA NUMERO
    (31) val -> . NUMERO
    (32) val -> . COMA NUMERO

    CADENA          shift and go to state 54
    COMA            shift and go to state 53
    NUMERO          shift and go to state 55

    val                            shift and go to state 52

state 37

    (7) declaration -> del wher PUNTOYCOMA .

    SELECT          reduce using rule 7 (declaration -> del wher PUNTOYCOMA .)
    UPDATE          reduce using rule 7 (declaration -> del wher PUNTOYCOMA .)
    INSERT          reduce using rule 7 (declaration -> del wher PUNTOYCOMA .)
    DELETE          reduce using rule 7 (declaration -> del wher PUNTOYCOMA .)
    $end            reduce using rule 7 (declaration -> del wher PUNTOYCOMA .)


state 38

    (11) wher -> WHERE vcom .
    (33) vcom -> vcom . andor variab relop NUMERO
    (36) vcom -> vcom . andor variab relop CADENA
    (47) andor -> . AND
    (48) andor -> . OR

    PUNTOYCOMA      reduce using rule 11 (wher -> WHERE vcom .)
    AND             shift and go to state 41
    OR              shift and go to state 42

    andor                          shift and go to state 56

state 39

    (35) vcom -> andor . variab relop NUMERO
    (38) vcom -> andor . variab relop CADENA
    (18) variab -> . variab COMA VARIABLE
    (19) variab -> . VARIABLE
    (20) variab -> . COMA VARIABLE

    VARIABLE        shift and go to state 24
    COMA            shift and go to state 23

    variab                         shift and go to state 57

state 40

    (34) vcom -> variab . relop NUMERO
    (37) vcom -> variab . relop CADENA
    (18) variab -> variab . COMA VARIABLE
    (39) relop -> . MENOR
    (40) relop -> . MENOR_O_IGUAL
    (41) relop -> . MAYOR
    (42) relop -> . MAYOR_O_IGUAL
    (43) relop -> . DIFERENTE
    (44) relop -> . DISTINTO
    (45) relop -> . ISEQUAL
    (46) relop -> . SIMBOLO_IGUAL

    COMA            shift and go to state 43
    MENOR           shift and go to state 59
    MENOR_O_IGUAL   shift and go to state 60
    MAYOR           shift and go to state 61
    MAYOR_O_IGUAL   shift and go to state 62
    DIFERENTE       shift and go to state 63
    DISTINTO        shift and go to state 64
    ISEQUAL         shift and go to state 65
    SIMBOLO_IGUAL   shift and go to state 66

    relop                          shift and go to state 58

state 41

    (47) andor -> AND .

    VARIABLE        reduce using rule 47 (andor -> AND .)
    COMA            reduce using rule 47 (andor -> AND .)


state 42

    (48) andor -> OR .

    VARIABLE        reduce using rule 48 (andor -> OR .)
    COMA            reduce using rule 48 (andor -> OR .)


state 43

    (18) variab -> variab COMA . VARIABLE

    VARIABLE        shift and go to state 67


state 44

    (20) variab -> COMA VARIABLE .

    COMA            reduce using rule 20 (variab -> COMA VARIABLE .)
    FROM            reduce using rule 20 (variab -> COMA VARIABLE .)
    SET             reduce using rule 20 (variab -> COMA VARIABLE .)
    MENOR           reduce using rule 20 (variab -> COMA VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 20 (variab -> COMA VARIABLE .)
    MAYOR           reduce using rule 20 (variab -> COMA VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 20 (variab -> COMA VARIABLE .)
    DIFERENTE       reduce using rule 20 (variab -> COMA VARIABLE .)
    DISTINTO        reduce using rule 20 (variab -> COMA VARIABLE .)
    ISEQUAL         reduce using rule 20 (variab -> COMA VARIABLE .)
    SIMBOLO_IGUAL   reduce using rule 20 (variab -> COMA VARIABLE .)
    VALUES          reduce using rule 20 (variab -> COMA VARIABLE .)


state 45

    (16) inser -> INSERT INTO variab .
    (18) variab -> variab . COMA VARIABLE

    VALUES          reduce using rule 16 (inser -> INSERT INTO variab .)
    COMA            shift and go to state 43


state 46

    (12) del -> DELETE FROM VARIABLE .

    WHERE           reduce using rule 12 (del -> DELETE FROM VARIABLE .)


state 47

    (4) declaration -> sele fro wher PUNTOYCOMA .

    SELECT          reduce using rule 4 (declaration -> sele fro wher PUNTOYCOMA .)
    UPDATE          reduce using rule 4 (declaration -> sele fro wher PUNTOYCOMA .)
    INSERT          reduce using rule 4 (declaration -> sele fro wher PUNTOYCOMA .)
    DELETE          reduce using rule 4 (declaration -> sele fro wher PUNTOYCOMA .)
    $end            reduce using rule 4 (declaration -> sele fro wher PUNTOYCOMA .)


state 48

    (5) declaration -> upd se wher PUNTOYCOMA .

    SELECT          reduce using rule 5 (declaration -> upd se wher PUNTOYCOMA .)
    UPDATE          reduce using rule 5 (declaration -> upd se wher PUNTOYCOMA .)
    INSERT          reduce using rule 5 (declaration -> upd se wher PUNTOYCOMA .)
    DELETE          reduce using rule 5 (declaration -> upd se wher PUNTOYCOMA .)
    $end            reduce using rule 5 (declaration -> upd se wher PUNTOYCOMA .)


state 49

    (21) vawva -> vawva COMA . VARIABLE SIMBOLO_IGUAL NUMERO
    (24) vawva -> vawva COMA . VARIABLE SIMBOLO_IGUAL CADENA

    VARIABLE        shift and go to state 68


state 50

    (23) vawva -> COMA VARIABLE . SIMBOLO_IGUAL NUMERO
    (26) vawva -> COMA VARIABLE . SIMBOLO_IGUAL CADENA

    SIMBOLO_IGUAL   shift and go to state 69


state 51

    (22) vawva -> VARIABLE SIMBOLO_IGUAL . NUMERO
    (25) vawva -> VARIABLE SIMBOLO_IGUAL . CADENA

    NUMERO          shift and go to state 70
    CADENA          shift and go to state 71


state 52

    (17) value -> VALUES PARE_IZ val . PARE_DE
    (27) val -> val . COMA CADENA
    (30) val -> val . COMA NUMERO

    PARE_DE         shift and go to state 72
    COMA            shift and go to state 73


state 53

    (29) val -> COMA . CADENA
    (32) val -> COMA . NUMERO

    CADENA          shift and go to state 74
    NUMERO          shift and go to state 75


state 54

    (28) val -> CADENA .

    PARE_DE         reduce using rule 28 (val -> CADENA .)
    COMA            reduce using rule 28 (val -> CADENA .)


state 55

    (31) val -> NUMERO .

    PARE_DE         reduce using rule 31 (val -> NUMERO .)
    COMA            reduce using rule 31 (val -> NUMERO .)


state 56

    (33) vcom -> vcom andor . variab relop NUMERO
    (36) vcom -> vcom andor . variab relop CADENA
    (18) variab -> . variab COMA VARIABLE
    (19) variab -> . VARIABLE
    (20) variab -> . COMA VARIABLE

    VARIABLE        shift and go to state 24
    COMA            shift and go to state 23

    variab                         shift and go to state 76

state 57

    (35) vcom -> andor variab . relop NUMERO
    (38) vcom -> andor variab . relop CADENA
    (18) variab -> variab . COMA VARIABLE
    (39) relop -> . MENOR
    (40) relop -> . MENOR_O_IGUAL
    (41) relop -> . MAYOR
    (42) relop -> . MAYOR_O_IGUAL
    (43) relop -> . DIFERENTE
    (44) relop -> . DISTINTO
    (45) relop -> . ISEQUAL
    (46) relop -> . SIMBOLO_IGUAL

    COMA            shift and go to state 43
    MENOR           shift and go to state 59
    MENOR_O_IGUAL   shift and go to state 60
    MAYOR           shift and go to state 61
    MAYOR_O_IGUAL   shift and go to state 62
    DIFERENTE       shift and go to state 63
    DISTINTO        shift and go to state 64
    ISEQUAL         shift and go to state 65
    SIMBOLO_IGUAL   shift and go to state 66

    relop                          shift and go to state 77

state 58

    (34) vcom -> variab relop . NUMERO
    (37) vcom -> variab relop . CADENA

    NUMERO          shift and go to state 78
    CADENA          shift and go to state 79


state 59

    (39) relop -> MENOR .

    NUMERO          reduce using rule 39 (relop -> MENOR .)
    CADENA          reduce using rule 39 (relop -> MENOR .)


state 60

    (40) relop -> MENOR_O_IGUAL .

    NUMERO          reduce using rule 40 (relop -> MENOR_O_IGUAL .)
    CADENA          reduce using rule 40 (relop -> MENOR_O_IGUAL .)


state 61

    (41) relop -> MAYOR .

    NUMERO          reduce using rule 41 (relop -> MAYOR .)
    CADENA          reduce using rule 41 (relop -> MAYOR .)


state 62

    (42) relop -> MAYOR_O_IGUAL .

    NUMERO          reduce using rule 42 (relop -> MAYOR_O_IGUAL .)
    CADENA          reduce using rule 42 (relop -> MAYOR_O_IGUAL .)


state 63

    (43) relop -> DIFERENTE .

    NUMERO          reduce using rule 43 (relop -> DIFERENTE .)
    CADENA          reduce using rule 43 (relop -> DIFERENTE .)


state 64

    (44) relop -> DISTINTO .

    NUMERO          reduce using rule 44 (relop -> DISTINTO .)
    CADENA          reduce using rule 44 (relop -> DISTINTO .)


state 65

    (45) relop -> ISEQUAL .

    NUMERO          reduce using rule 45 (relop -> ISEQUAL .)
    CADENA          reduce using rule 45 (relop -> ISEQUAL .)


state 66

    (46) relop -> SIMBOLO_IGUAL .

    NUMERO          reduce using rule 46 (relop -> SIMBOLO_IGUAL .)
    CADENA          reduce using rule 46 (relop -> SIMBOLO_IGUAL .)


state 67

    (18) variab -> variab COMA VARIABLE .

    COMA            reduce using rule 18 (variab -> variab COMA VARIABLE .)
    FROM            reduce using rule 18 (variab -> variab COMA VARIABLE .)
    SET             reduce using rule 18 (variab -> variab COMA VARIABLE .)
    MENOR           reduce using rule 18 (variab -> variab COMA VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 18 (variab -> variab COMA VARIABLE .)
    MAYOR           reduce using rule 18 (variab -> variab COMA VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 18 (variab -> variab COMA VARIABLE .)
    DIFERENTE       reduce using rule 18 (variab -> variab COMA VARIABLE .)
    DISTINTO        reduce using rule 18 (variab -> variab COMA VARIABLE .)
    ISEQUAL         reduce using rule 18 (variab -> variab COMA VARIABLE .)
    SIMBOLO_IGUAL   reduce using rule 18 (variab -> variab COMA VARIABLE .)
    VALUES          reduce using rule 18 (variab -> variab COMA VARIABLE .)


state 68

    (21) vawva -> vawva COMA VARIABLE . SIMBOLO_IGUAL NUMERO
    (24) vawva -> vawva COMA VARIABLE . SIMBOLO_IGUAL CADENA

    SIMBOLO_IGUAL   shift and go to state 80


state 69

    (23) vawva -> COMA VARIABLE SIMBOLO_IGUAL . NUMERO
    (26) vawva -> COMA VARIABLE SIMBOLO_IGUAL . CADENA

    NUMERO          shift and go to state 81
    CADENA          shift and go to state 82


state 70

    (22) vawva -> VARIABLE SIMBOLO_IGUAL NUMERO .

    COMA            reduce using rule 22 (vawva -> VARIABLE SIMBOLO_IGUAL NUMERO .)
    WHERE           reduce using rule 22 (vawva -> VARIABLE SIMBOLO_IGUAL NUMERO .)


state 71

    (25) vawva -> VARIABLE SIMBOLO_IGUAL CADENA .

    COMA            reduce using rule 25 (vawva -> VARIABLE SIMBOLO_IGUAL CADENA .)
    WHERE           reduce using rule 25 (vawva -> VARIABLE SIMBOLO_IGUAL CADENA .)


state 72

    (17) value -> VALUES PARE_IZ val PARE_DE .

    PUNTOYCOMA      reduce using rule 17 (value -> VALUES PARE_IZ val PARE_DE .)


state 73

    (27) val -> val COMA . CADENA
    (30) val -> val COMA . NUMERO

    CADENA          shift and go to state 83
    NUMERO          shift and go to state 84


state 74

    (29) val -> COMA CADENA .

    PARE_DE         reduce using rule 29 (val -> COMA CADENA .)
    COMA            reduce using rule 29 (val -> COMA CADENA .)


state 75

    (32) val -> COMA NUMERO .

    PARE_DE         reduce using rule 32 (val -> COMA NUMERO .)
    COMA            reduce using rule 32 (val -> COMA NUMERO .)


state 76

    (33) vcom -> vcom andor variab . relop NUMERO
    (36) vcom -> vcom andor variab . relop CADENA
    (18) variab -> variab . COMA VARIABLE
    (39) relop -> . MENOR
    (40) relop -> . MENOR_O_IGUAL
    (41) relop -> . MAYOR
    (42) relop -> . MAYOR_O_IGUAL
    (43) relop -> . DIFERENTE
    (44) relop -> . DISTINTO
    (45) relop -> . ISEQUAL
    (46) relop -> . SIMBOLO_IGUAL

    COMA            shift and go to state 43
    MENOR           shift and go to state 59
    MENOR_O_IGUAL   shift and go to state 60
    MAYOR           shift and go to state 61
    MAYOR_O_IGUAL   shift and go to state 62
    DIFERENTE       shift and go to state 63
    DISTINTO        shift and go to state 64
    ISEQUAL         shift and go to state 65
    SIMBOLO_IGUAL   shift and go to state 66

    relop                          shift and go to state 85

state 77

    (35) vcom -> andor variab relop . NUMERO
    (38) vcom -> andor variab relop . CADENA

    NUMERO          shift and go to state 86
    CADENA          shift and go to state 87


state 78

    (34) vcom -> variab relop NUMERO .

    AND             reduce using rule 34 (vcom -> variab relop NUMERO .)
    OR              reduce using rule 34 (vcom -> variab relop NUMERO .)
    PUNTOYCOMA      reduce using rule 34 (vcom -> variab relop NUMERO .)


state 79

    (37) vcom -> variab relop CADENA .

    AND             reduce using rule 37 (vcom -> variab relop CADENA .)
    OR              reduce using rule 37 (vcom -> variab relop CADENA .)
    PUNTOYCOMA      reduce using rule 37 (vcom -> variab relop CADENA .)


state 80

    (21) vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL . NUMERO
    (24) vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL . CADENA

    NUMERO          shift and go to state 88
    CADENA          shift and go to state 89


state 81

    (23) vawva -> COMA VARIABLE SIMBOLO_IGUAL NUMERO .

    COMA            reduce using rule 23 (vawva -> COMA VARIABLE SIMBOLO_IGUAL NUMERO .)
    WHERE           reduce using rule 23 (vawva -> COMA VARIABLE SIMBOLO_IGUAL NUMERO .)


state 82

    (26) vawva -> COMA VARIABLE SIMBOLO_IGUAL CADENA .

    COMA            reduce using rule 26 (vawva -> COMA VARIABLE SIMBOLO_IGUAL CADENA .)
    WHERE           reduce using rule 26 (vawva -> COMA VARIABLE SIMBOLO_IGUAL CADENA .)


state 83

    (27) val -> val COMA CADENA .

    PARE_DE         reduce using rule 27 (val -> val COMA CADENA .)
    COMA            reduce using rule 27 (val -> val COMA CADENA .)


state 84

    (30) val -> val COMA NUMERO .

    PARE_DE         reduce using rule 30 (val -> val COMA NUMERO .)
    COMA            reduce using rule 30 (val -> val COMA NUMERO .)


state 85

    (33) vcom -> vcom andor variab relop . NUMERO
    (36) vcom -> vcom andor variab relop . CADENA

    NUMERO          shift and go to state 90
    CADENA          shift and go to state 91


state 86

    (35) vcom -> andor variab relop NUMERO .

    AND             reduce using rule 35 (vcom -> andor variab relop NUMERO .)
    OR              reduce using rule 35 (vcom -> andor variab relop NUMERO .)
    PUNTOYCOMA      reduce using rule 35 (vcom -> andor variab relop NUMERO .)


state 87

    (38) vcom -> andor variab relop CADENA .

    AND             reduce using rule 38 (vcom -> andor variab relop CADENA .)
    OR              reduce using rule 38 (vcom -> andor variab relop CADENA .)
    PUNTOYCOMA      reduce using rule 38 (vcom -> andor variab relop CADENA .)


state 88

    (21) vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL NUMERO .

    COMA            reduce using rule 21 (vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL NUMERO .)
    WHERE           reduce using rule 21 (vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL NUMERO .)


state 89

    (24) vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL CADENA .

    COMA            reduce using rule 24 (vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL CADENA .)
    WHERE           reduce using rule 24 (vawva -> vawva COMA VARIABLE SIMBOLO_IGUAL CADENA .)


state 90

    (33) vcom -> vcom andor variab relop NUMERO .

    AND             reduce using rule 33 (vcom -> vcom andor variab relop NUMERO .)
    OR              reduce using rule 33 (vcom -> vcom andor variab relop NUMERO .)
    PUNTOYCOMA      reduce using rule 33 (vcom -> vcom andor variab relop NUMERO .)


state 91

    (36) vcom -> vcom andor variab relop CADENA .

    AND             reduce using rule 36 (vcom -> vcom andor variab relop CADENA .)
    OR              reduce using rule 36 (vcom -> vcom andor variab relop CADENA .)
    PUNTOYCOMA      reduce using rule 36 (vcom -> vcom andor variab relop CADENA .)

